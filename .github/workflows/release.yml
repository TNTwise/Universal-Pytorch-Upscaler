name: Release

on:
  workflow_dispatch:

env:
  GITHUB_ACTIONS: true

jobs:
  setup:
    runs-on: ubuntu-20.04
    outputs:
      DATE: ${{ steps.get_date.outputs.DATE }}
    steps:
      - name: Get current date
        id: get_date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

  macos:
    strategy:
      matrix:
        python-version: ["3.11"]

    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "14.2.0"

      

      - name: Check Python version
        run: |
          python --version

      
      - name: install pip dependencies
        run: |
              python3 -m pip install -r requirements.txt
              
        

      - name: build
        run: |
              python3 -m PyInstaller --onefile UniversalTorchUpscaler.py

      - name: compress
        run: |
              cd dist
              tar -cf - * | xz -9e > UniversalPytorchUpscalerMacOS.tar.xz *
              
      
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          path: dist/UniversalPytorchUpscalerMacOS.tar.xz

  windows:
    strategy:
      matrix:
        python-version: ["3.11"]

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"


      

      - name: Check Python version
        run: |
          python --version

      
      - name: install pip dependencies
        run: |
              python3 -m pip install -r requirements.txt
              python3 -m pip  install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
        

      - name: build
        run: |
              python3 -m PyInstaller UniversalTorchUpscaler.py --collect-all torch,torchvision,spandrel
      - name: compress
        run: |
              ls
              cd dist
              7z a -t7z -m0=lzma -mx=9 -mfb=64 -md=32m ../UniversalPytorchUpscalerWindows.7z *
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          path: UniversalPytorchUpscalerWindows.7z

    

  linux:
    strategy:
      matrix:
        python-version: ["3.11"]

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"



      - name: Check Python version
        run: |
          python --version

      
      - name: install pip dependencies
        run: |
              python3 -m pip install -r requirements.txt
              python3 -m pip  install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

      - name: build
        run: |
              python3 -m PyInstaller UniversalTorchUpscaler.py --collect-all torch,torchvision,spandrel
      - name: compress
        run: |
              cd dist
              tar -cf - * | xz -9e > ../UniversalPytorchUpscalerLinux.tar.xz * 
              
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          path: UniversalPytorchUpscalerLinux.tar.xz
          
  Release:
    needs: [setup, macos, windows, linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: asset

      - name: dist
        run: |
          mkdir dist
          cp asset/artifact/* dist
          cd dist && ls

      
      - name: Create Release and Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ needs.setup.outputs.DATE }}
          tag_name: ${{ needs.setup.outputs.DATE }}
          body: Auto Release.
          draft: false
          prerelease: false
          files: dist/*
